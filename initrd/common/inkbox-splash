#!/bin/sh
# Displays a big "InkBox" splash from the initrd userspace

DEVICE=$(cat /opt/device)
PROGRESS_BAR=0
[ "${1}" == "progress_bar_init" ] && PROGRESS_BAR=1

setup() {
	CHROOT_DIR="/splash"
	[ ${PROGRESS_BAR} == 1 ] && CHROOT_DIR="/splash_progress_bar"
	mkdir -p "${CHROOT_DIR}"
	cd "${CHROOT_DIR}"
	tar -xf /opt/splash-rootfs.tar.xz
	cd - &>/dev/null

	cp /bin/busybox "${CHROOT_DIR}/bin/busybox"
	mount -t devtmpfs devtmpfs "${CHROOT_DIR}/dev"
	mount -t sysfs sysfs "${CHROOT_DIR}/sys"
	mount -t proc proc "${CHROOT_DIR}/proc"
}

cleanup() {
	umount "${CHROOT_DIR}/dev" -l -f
	umount "${CHROOT_DIR}/sys" -l -f
	umount "${CHROOT_DIR}/proc" -l -f
	rm -rf "${CHROOT_DIR}"
}

calculate() {
        result=$(awk "BEGIN { print "$*" }")
        printf "%.0f\n" ${result}
}

print_progress() {
	PERCENTAGE=${1}
	echo "true" > /run/print_busy

	if [ ! -z ${2} ]; then
		LD_LIBRARY_PATH=/opt/fbink busybox chroot "${CHROOT_DIR}" /opt/fbink/fbink -s top=$(calculate ${viewHeight}/2+${viewHeight}/8),left=$(calculate ${viewWidth}/4),width=$(calculate ${viewWidth}/2),height=$(calculate 2.44140625*100/${viewHeight}*100) -W GC16 -D ORDERED -w &>/dev/null
		LD_LIBRARY_PATH=/opt/fbink busybox chroot "${CHROOT_DIR}" /opt/fbink/fbink -s top=$(calculate ${viewHeight}/2+${viewHeight}/8+2),left=$(calculate ${viewWidth}/4+2),width=$(calculate ${viewWidth}/2-4),height=$(calculate 2.44140625*100/${viewHeight}*100-4) -W GC16 -D ORDERED -H -w &>/dev/null
	fi

	LD_LIBRARY_PATH=/opt/fbink busybox chroot "${CHROOT_DIR}" /opt/fbink/fbink -s top=$(calculate ${viewHeight}/2+${viewHeight}/8),left=$(calculate ${viewWidth}/4),width=$(calculate ${viewWidth}/4/2*4*${PERCENTAGE}/100),height=$(calculate 2.44140625*100/${viewHeight}*100) -W GC16 -D ORDERED -w &>/dev/null
	echo "false" > /run/print_busy
}

if [ "${DEVICE}" == "n705" ] || [ "${DEVICE}" == "n905b" ] || [ "${DEVICE}" == "n905c" ]; then
        ROW=30
	ALERT_ROW=18
elif [ "${DEVICE}" == "n613" ]; then
        ROW=37
	ALERT_ROW=24
elif [ "${DEVICE}" == "n873" ]; then
        ROW=30
	ALERT_ROW=18
else
	ROW=30
	ALERT_ROW=18
fi

if [ "${DEVICE}" == "n905b" ] || [ "${DEVICE}" == "n905c" ] || [ "${DEVICE}" == "n613" ]; then
	SIZE=70
elif [ "${DEVICE}" == "n705" ]; then
	SIZE=55
elif [ "${DEVICE}" == "n873" ]; then
	SIZE=90
else
	SIZE=70
fi

if [ "${DEVICE}" == "n705" ] || [ "${DEVICE}" == "n905b" ] || [ "${DEVICE}" == "n905c" ] || [ "${DEVICE}" == "n613" ]; then
	FB_UR=3
elif [ "${DEVICE}" == "n873" ]; then
	FB_UR=0
else
	FB_UR=3
fi

if [ ! -z ${UPDATE_SPLASH_PID} ]; then
	kill -9 ${UPDATE_SPLASH_PID}
	cleanup
	setup
else
	setup
fi

echo ${FB_UR} > /sys/class/graphics/fb0/rotate

if [ "${1}" == "update_splash" ]; then
	ln -s /bin/busybox /splash/bin/sh
	ln -s /bin/busybox /splash/bin/sleep
	LD_LIBRARY_PATH=/opt/fbink busybox chroot /splash /opt/fbink/fbink "-k" "-f" "-h" "-q"
	LD_LIBRARY_PATH=/opt/fbink busybox chroot /splash /opt/fbink/fbink "-t" "regular=/opt/fbink/inter-b.ttf,size=20" "Updating" "-m" "-M" "-h" "-q"
	LD_LIBRARY_PATH=/opt/fbink busybox chroot /splash /opt/bin/update-splash "${ROW}" &>/dev/null &
elif [ "${1}" == "progress_bar_init" ]; then
	ln -s /bin/busybox "${CHROOT_DIR}/bin/sh"
	mkfifo /run/progress_bar_fifo
	eval $(LD_LIBRARY_PATH=/opt/fbink busybox chroot "${CHROOT_DIR}" /opt/fbink/fbink -e)
	BOUNDARY_DRAWING_DONE=0
	QUEUE=""
	echo "false" > /run/print_busy
	while true; do
		if read line < /run/progress_bar_fifo; then
			if [ "${line}" != "stop" ]; then
				if [ $(cat /run/print_busy) != "true" ]; then
					if [ "${BOUNDARY_DRAWING_DONE}" == 0 ]; then
						BOUNDARY_DRAWING_DONE=1
						print_progress "${line}" 1 &
					else
						print_progress "${line}" &
					fi
				else
					export QUEUE="${QUEUE}:${line}"
				fi
				sleep 0.1
			else
				rm /run/progress_bar_fifo
				cleanup
				echo "${QUEUE}" > /run/queue
				break
			fi
		fi
	done
elif [ "${1}" == "alert_splash" ]; then
	ln -s /bin/busybox /splash/bin/sh
	ln -s /bin/busybox /splash/bin/cat
	/opt/bin/alert-ascii.sh /splash/alert.ascii "${2}"
	LD_LIBRARY_PATH=/opt/fbink busybox chroot /splash /opt/fbink/fbink "-k" "-f" "-q"
	LD_LIBRARY_PATH=/opt/fbink busybox chroot /splash /bin/sh "-c" "cat /alert.ascii | /opt/fbink/fbink -q -m -y ${ALERT_ROW}"
elif [ "${1}" == "developer_splash" ]; then
	while true; do
		LD_LIBRARY_PATH=/opt/fbink busybox chroot /splash /opt/fbink/fbink "-m" "█ █ █ █ Developer mode █ █ █ █" "-y" "2" "-q"
		sleep 30
	done
elif [ "${1}" == "dfl" ]; then
	LD_LIBRARY_PATH=/opt/fbink busybox chroot /splash /opt/fbink/fbink "-k" "-f" "-h" "-q"
	LD_LIBRARY_PATH=/opt/fbink busybox chroot /splash /opt/fbink/fbink "-t" "regular=/opt/fbink/inter-b.ttf,size=40" "DFL" "-m" "-M" "-h" "-q"
else
	LD_LIBRARY_PATH=/opt/fbink busybox chroot /splash /opt/fbink/fbink "-k" "-f" "-q"
	LD_LIBRARY_PATH=/opt/fbink busybox chroot /splash /opt/fbink/fbink "-M" "-m" "-q" "-t" "regular=/opt/fbink/fraunces.ttf,size=${SIZE}" "InkBox"
fi

if [ "${1}" != "update_splash" ] || [ "${1}" != "progress_bar_init" ]; then
	cleanup
fi
