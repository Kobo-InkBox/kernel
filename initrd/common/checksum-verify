#!/bin/sh

verify_checksum() {
	CHECKSUM=$(sha256sum "${PACKAGE_PATH}" | awk '{ print $1 }')
	if [ "${CHECKSUM}" == "${CHECKSUM_VERIFY}" ]; then
		return 0
	else
		return 1
	fi
}

SERVER_HOSTNAME="alpinekobox.ddns.net"
SERVER_PORT="500"
DEVICE=$(cat /opt/device 2>/dev/null)
VERSION=$(cat /mnt/opt/version 2>/dev/null)
PACKAGE_PATH="${1}"
PACKAGE=$(basename "${PACKAGE_PATH}")
IS_CONNECTED=$(cat /tmp/wifi_connected 2>/dev/null)

if [ "${IS_CONNECTED}" != "true" ]; then
	exit 1
elif grep -q "true" /mnt/opt/developer/key/valid-key &>/dev/null; then
	exit 0
else
	# Doing this because busybox wget can't resolve an Internet address
	SERVER_IP_ADDRESS=$(nslookup "${SERVER_HOSTNAME}" | awk -F': ' 'NR==6 { print $2 } ' 2>/dev/null)
	SERVER="${SERVER_IP_ADDRESS}:${SERVER_PORT}"
	# Trying firmware relase checksums
	CHECKSUM_VERIFY=$(wget -O - "http://${SERVER}/keyserver/device/${DEVICE}/packages/${VERSION}/${PACKAGE}.sha256" 2>/dev/null)
	if [ ${?} != 0 ]; then
		# If not found, then try with common checksums
		CHECKSUM_VERIFY=$(wget -O - "http://${SERVER}/keyserver/common/packages/${VERSION}/${PACKAGE}.sha256" 2>/dev/null)
		if [ ${?} != 0 ]; then
			# If not found, then try with KoBox checksums
			CHECKSUM_VERIFY=$(wget -O - "http://${SERVER}/keyserver/common/packages/kobox/${PACKAGE}.sha256" 2>/dev/null)
			if [ ${?} != 0 ]; then
				return 127
			else
				verify_checksum "${PACKAGE_PATH}"
				exit ${?}
			fi
		else
			verify_checksum "${PACKAGE_PATH}"
			exit ${?}
		fi
	else
		verify_checksum "${PACKAGE_PATH}"
		exit ${?}
	fi
fi
